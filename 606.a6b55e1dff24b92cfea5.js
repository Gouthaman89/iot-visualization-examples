(self.webpackChunkiot_visualization_examples=self.webpackChunkiot_visualization_examples||[]).push([[606],{5340:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(4588),s=r(3413),a=r(9825),o=r(6486),n=r(8269),l=r(5459),h=window.THREE,c=h.Math.degToRad,d=new h.Box3;t.default=class{constructor(e,t,r){this.space=e,this.object3d=t,t.$controller=this,this.init()}applyUserData(){if(!this.userData)return;Array.from(this.object3d.children).forEach((e=>{e.$controller&&e.$controller.applyUserData()}));const e=this.userData;e.id&&this.space.setControllerId(e.id,this),e.renderOrder&&(this.object3d.renderOrder=e.renderOrder),e.showingModel&&this.changeShowingModel(e.showingModel),e.bloom&&this.bloom(!0),(e.popover||e.tips||e.click)&&(this.raycasterFlag=!0)}applyTags(){if(0===this.tags.length)return;const e=this;this.tags.forEach((t=>{const r=t[0];switch(r){case"r":e.setRaycasterRedirect(t);break;case"m":break;default:console.warn(r,"is not an available tags flag.")}}))}bloom(e){e?this.showingObject3d.layers.enable(1):this.showingObject3d.layers.disable(1)}changeShowingModel(e){switch(e){case"line":this.changeToLineModel();break;case"normal":this.changeToNormalModel();break;case"pipe":this.changeToPipeModel();break;case"points":this.changeToPointsModel();break;default:return console.error("can't change to this model :",e),this}return this}changeToCapacityModel(e){if(!l.hasGeometry(this.showingObject3d)||"capacity"!==this.showingModel)return this.capacityObject3d||this.initCapacityModel(e),this.showingModel="capacity",this.updateShowingObject3d(this.capacityObject3d),this}changeToNormalModel(){if(l.hasGeometry(this.showingObject3d)&&"normal"===this.showingModel)return;this.showingModel="normal";const e=this.object3d,t=l.hasGeometry(e);return this.setRaycasterObject(e),t||Array.from(this.showingObject3d.children).forEach((t=>{t.$controller&&(e.add(t),t.$controller.changeToNormalModel())})),this.updateShowingObject3d(e),this}changeToLineModel(e){if(l.hasGeometry(this.showingObject3d)&&"line"===this.showingModel)return;this.lineObject3d||this.initLineModel(e),this.showingModel="line";const t=this.lineObject3d,r=l.hasGeometry(t);return this.setRaycasterObject(t),r||Array.from(this.showingObject3d.children).forEach((r=>{r.$controller&&(t.add(r),r.$controller.changeToLineModel(e))})),this.updateShowingObject3d(this.lineObject3d),this}changeToPipeModel(e){if(l.hasGeometry(this.showingObject3d)&&"pipe"===this.showingModel)return;this.pipeObject3d||this.initPipeModel(e),this.showingModel="pipe";const t=this.pipeObject3d,r=l.hasGeometry(t);return this.setRaycasterObject(t),r||Array.from(this.showingObject3d.children).forEach((r=>{r.$controller&&(t.add(r),r.$controller.changeToPipeModel(e))})),this.updateShowingObject3d(this.pipeObject3d),this}changeToPointsModel(e){if(l.hasGeometry(this.showingObject3d)&&"points"===this.showingModel)return;this.pointsObject3d||this.initPointsModel(e),this.showingModel="points";const t=this.pointsObject3d,r=l.hasGeometry(t);return this.setRaycasterObject(t),r||Array.from(this.showingObject3d.children).forEach((r=>{r.$controller&&(t.add(r),r.$controller.changeToPointsModel(e))})),this.updateShowingObject3d(this.pointsObject3d),this}executeAction(e,t){t?(this.status=e,this.offsetMove(t)):this.showingObject3d.traverse((t=>{t.$controller&&t.$controller.userData[e]&&(t.$controller.status=e,t.$controller.offsetMove(t.$controller.userData[e]))}))}getControllersByName(e){const t=[];return this.showingObject3d.traverse((r=>{r.$controller&&r.$controller.name.includes(e)&&t.push(r.$controller)})),t}getRaycasterObject(){return this.raycasterObject||this.showingObject3d}getViewOffset(e){const t=e||{},r=this.space,i={},a=r.innerWidth/2,n=r.innerHeight/2,l=new h.Vector3;d.setFromObject(this.showingObject3d);const c=s.interpolateNumber(d.min.x,d.max.x),u=s.interpolateNumber(d.min.y,d.max.y),m=s.interpolateNumber(d.min.z,d.max.z);return l.set(c(o.isNumber(t.x)?t.x:.5),u(o.isNumber(t.y)?t.y:.5),m(o.isNumber(t.z)?t.z:.5)),l.project(r.camera),i.x=l.x*a+a+r.offset.left,i.y=-l.y*n+n+r.offset.top,i}hasTag(e){return this.tags.includes(e)}init(){const e=this.object3d;return this.userData=e.userData,this.originalPosition=this.position=e.position.clone(),this.originalRotation=this.rotation=e.rotation.clone(),this.originalScale=this.scale=e.scale.clone(),this.showingModel="normal",this.showingObject3d=e,this.raycasterRedirect=this,this.parseName(e.name),this}initCapacityModel(e){const t=this.object3d,r=this.lineObject3d=new h.Group;r.name=this.name+"_capacityObject3d",r.$controller=this;const i=d.setFromObject(t);this.box3=i;const s=i.max.x-i.min.x,a=i.max.y-i.min.y,o=i.max.z-i.min.z,n=new h.BoxGeometry(s,a,o),l=new h.MeshBasicMaterial({color:13421772,opacity:.4,transparent:!0}),c=new h.Mesh(n,l),u=new h.MeshBasicMaterial({color:52224}),m=new h.Mesh(n,u);return m.name="capacity-value",m.scale.set(.85,.4,.85),m.position.set(0,-.3*a,0),r.add(c),r.add(m),this.capacityObject3d=r,this}setCapacity(e,t){if(!this.capacityObject3d)return console.warn("you should init capacity model before set value.");const r=(e||1)/100,i=this.capacityObject3d.getObjectByName("capacity-value");i.scale.y=r;const s=this.box3.max.y-this.box3.min.y;i.position.y=-(1-r)/2*s,i.material.color=new h.Color(t||l.getColorByValue(e))}initLineModel(e){const t=e||this.userData.showingModelOptions||{},r=this.object3d,i=this.lineObject3d=new h.Group,s=new h.LineBasicMaterial({color:t.color||65535}),a=new h.MeshBasicMaterial({opacity:t.opacity||0,side:h.BackSide,transparent:!0});if(i.name=this.name+"_lineObject3d",i.$controller=this,l.hasGeometry(r)){const e=r,t=new h.EdgesGeometry(e.geometry),o=new h.LineSegments(t,s),n=new h.Mesh(e.geometry,a);n.name=i.name+"_raycasterObject",l.resetCoordinate(o),l.resetCoordinate(n),this.setRaycasterObject(n),n.scale.set(1.01,1.01,1.01),i.add(o).add(n)}else Array.from(r.children).forEach((t=>{t.$controller&&(i.add(t),t.$controller.changeToLineModel(e))}));return this}initPipeModel(e){const t=e||this.userData.showingModelOptions||{},r=this.object3d,i=this.pipeObject3d=new h.Group;i.name=this.name+"_pipeObject3d",i.$controller=this;const s=document.createElement("canvas").getContext("2d");s.canvas.width=64,s.canvas.height=64,s.translate(32,32),s.rotate(o.isNumber(t.flowRotation)?c(t.flowRotation):c(90)),s.fillStyle=t.flowColor||"#00ffff",s.textAlign="center",s.textBaseline="middle",s.font="48px sans-serif",s.fillText("➡︎",0,0);const a=new h.CanvasTexture(s.canvas);a.wrapS=h.RepeatWrapping,a.wrapT=h.RepeatWrapping,a.repeat.x=1,a.repeat.y=t.flowNumberY||5,a.offset.x=t.flowOffsetX||0;const d=new h.MeshBasicMaterial({color:t.color||4210943,depthTest:!1,depthWrite:!1,opacity:t.opacity||.5,side:h.DoubleSide,transparent:!0}),u=new h.MeshBasicMaterial({depthTest:!1,depthWrite:!1,map:a,opacity:t.flowOpacity||.5,side:h.DoubleSide,transparent:!0});if(l.hasGeometry(r)){const e=r,s=new h.Mesh(e.geometry,d),o=new h.Mesh(e.geometry,u);l.resetCoordinate(s),l.resetCoordinate(o),s.name=i.name+"_raycasterObject",this.setRaycasterObject(s),i.add(s).add(o),this.textureUpdate=function(){a.offset.y+=t.flowSpeed||.01},this.space.on(n.default.animate,this.textureUpdate)}else Array.from(r.children).forEach((t=>{t.$controller&&(i.add(t),t.$controller.changeToPipeModel(e))}));return this}initPointsModel(e){const t=e||this.userData.showingModelOptions||{},r=new h.PointsMaterial({size:t.size||.1,color:t.color||16777215}),i=this.object3d,s=new h.MeshBasicMaterial({opacity:t.opacity||0,side:h.BackSide,transparent:!0}),a=this.pointsObject3d=new h.Group;if(a.name=this.name+"_pointsObject3d",a.$controller=this,l.hasGeometry(i)){const e=i,t=new h.Points(e.geometry,r),o=new h.Mesh(e.geometry,s);o.name=a.name+"_raycasterObject",this.setRaycasterObject(o),l.resetCoordinate(t),a.add(o).add(t)}else Array.from(i.children).forEach((t=>{t.$controller&&(a.add(t),t.$controller.changeToPointsModel(e))}));return this}parseName(e){const t=e.split("_");this.name=t[0],this.tags=[],t.length>1&&(isNaN(Number(t[1]))?this.tags=t.slice(1):(this.name+=t[1],this.tags=t.slice(2))),this.tags=this.tags.filter((e=>isNaN(Number(e)))),this.applyTags()}offsetMove(e){const t=this;let r,o,n=new h.Vector3,l=new h.Euler;const d=this.originalPosition.clone(),u=this.originalRotation.clone();(e.x||e.y||e.z)&&(r=!0,n=d.add(new h.Vector3(e.x||0,e.y||0,e.z||0))),(e.rx||e.ry||e.rz)&&(o=!0,l=new h.Euler(u.x+c(e.rx||0),u.y+c(e.ry||0),u.z+c(e.rz||0))),a.select({}).transition().duration(e.t||2e3).ease(i.easeCubicInOut).tween("object-offsetMove",(()=>{const e=s.interpolateNumber(t.originalPosition.x,n.x),i=s.interpolateNumber(t.originalPosition.y,n.y),a=s.interpolateNumber(t.originalPosition.z,n.z),h=s.interpolateNumber(t.originalRotation.x,l.x),c=s.interpolateNumber(t.originalRotation.y,l.y),d=s.interpolateNumber(t.originalRotation.z,l.z);return s=>{r&&t.showingObject3d.position.set(e(s),i(s),a(s)),o&&t.showingObject3d.rotation.set(h(s),c(s),d(s))}}))}resetAction(){this.showingObject3d.traverse((e=>{const t=e.$controller;t&&t.status&&(t.status=null,t.resetLocation())}))}resetLocation(){const e=this.showingObject3d,t=e.position.clone(),r=e.rotation.clone(),o=this.originalPosition,n=this.originalRotation;a.select({}).transition().duration(2e3).ease(i.easeCubicInOut).tween("object-resetLocation",(()=>{const i=s.interpolateNumber(t.x,o.x),a=s.interpolateNumber(t.y,o.y),l=s.interpolateNumber(t.z,o.z),h=s.interpolateNumber(r.x,n.x),c=s.interpolateNumber(r.y,n.y),d=s.interpolateNumber(r.z,n.z);return t=>{e.position.set(i(t),a(t),l(t)),e.rotation.set(h(t),c(t),d(t))}}))}updateShowingObject3d(e){const t=this.showingObject3d,r=t.parent;return r&&r.remove(t).add(e),l.copyCoordinate(t,e),this.showingObject3d=e,this.space.updateRaycasterObjects(),this}setRaycasterObject(e){this.raycasterObject=e}setRaycasterRedirect(e){if(this.raycasterFlag=!0,"r"===e)this.raycasterRedirect=this;else{const t=Number(e.substring(1));let r=this.object3d;for(let e=0;e<t;e++)r=r.parent;this.raycasterRedirect=r.$controller}}}},6213:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(4588),s=r(9825);r(4942),r(4935);const a=r(1855),o=r(6665),n=r(3066),l=r(5340);r(84),r(9507),r(5367),r(5187),r(2032),r(7835),r(5026),r(2264);const h=r(3413),c=r(6486),d=r(9652),u=r(8269),m=window.THREE,p=new m.Box3,g=new m.Vector3,f=new m.Vector3,v=new m.Sphere;t.default=class{constructor(e,t){return this.element=e,this.options=t,this.init(),this}focus(e){let t;p.setFromObject(e),!1===p.isEmpty()?(p.getCenter(f),t=p.getBoundingSphere(v).radius):(f.setFromMatrixPosition(e.matrixWorld),t=.1),g.set(0,0,1),g.applyQuaternion(this.camera.quaternion),g.multiplyScalar(4*t);const r=this.camera.position.clone(),a=f.add(g),o=this;s.select({}).transition().duration(2e3).ease(i.easeCubicInOut).tween("camera-focus-move",(()=>{const t=h.interpolateNumber(r.x,a.x),i=h.interpolateNumber(r.y,a.y),s=h.interpolateNumber(r.z,a.z);let n,l,c;if(o.orbit){const t=o.orbit.target.clone();n=h.interpolateNumber(t.x,e.position.x),l=h.interpolateNumber(t.y,e.position.y),c=h.interpolateNumber(t.z,e.position.z)}return e=>{o.camera.position.set(t(e),i(e),s(e)),o.orbit&&(o.orbit.target.set(n(e),l(e),c(e)),o.orbit.update())}}))}getControllerById(e){return this.controllerIdList.get(e)}getControllersByName(e){const t=[];return this.scene.traverse((r=>{r.$controller&&r.$controller.name.includes(e)&&t.push(r.$controller)})),t}getControllersByTags(e){const t=[];return this.scene.traverse((r=>{r.$controller&&r.$controller.tags.includes(e)&&t.push(r.$controller)})),t}getViewOffset(e){const t=new m.Vector3,r={},i=this.innerWidth/2,s=this.innerHeight/2;return t.setFromMatrixPosition(e.matrixWorld),t.project(this.camera),r.x=t.x*i+i+this.offset.left,r.y=-t.y*s+s+this.offset.top,r}getPositionByPercent(e,t,r){this.box3||this.getBox();const i=this.box3.max,s=this.box3.min;return new m.Vector3((i.x-s.x)*e/100+s.x,(i.y-s.y)*t/100+s.y,(i.z-s.z)*r/100+s.z)}afterLoaded(e){const t=this.element,r=this.scene=e.scene,i=this.camera=new m.PerspectiveCamera(20,t.clientWidth/t.clientHeight,.1,1e3);return this.setPerspectiveCamera(i,r.userData),r.add(i),r.add(new m.HemisphereLight(16777215,16777215,1)),this.scene.traverse((e=>{"Scene"!==e.type&&new l.default(this,e)})),Array.from(this.scene.children).forEach((e=>{e.$controller&&e.$controller.applyUserData()})),this.updateRaycasterObjects(),this.raycasterEventMap||this.setRaycasterEventMap({click:e=>{e.length>0&&this.setOutline([e[0].object])}}),t.addEventListener("click",this.eventList.updateMouse),t.addEventListener("dblclick",this.eventList.updateMouse),t.addEventListener("mousemove",this.eventList.updateMouse),this.options.outline&&this.initOutline(),this.animate(),this}animate(){return this.emit(u.default.animate,null),this.bloomPass&&!this.stopComposer?(this.renderer.autoClear=!1,this.renderer.clear(),this.camera.layers.set(1),this.composer.render(),this.renderer.clearDepth(),this.camera.layers.set(0),this.renderer.render(this.scene,this.camera)):this.composer&&!this.stopComposer?this.composer.render():this.renderer.render(this.scene,this.camera),this.animationId=requestAnimationFrame(this.animate.bind(this)),this}createEmptyScene(){const e={};e.scene=new m.Scene,this.afterLoaded(e)}dispose(){const e=this.element;cancelAnimationFrame(this.animationId),this.scene.dispose(),window.removeEventListener("resize",this.eventList.resize),e.removeEventListener("click",this.eventList.updateMouse),e.removeEventListener("dblclick",this.eventList.updateMouse),e.removeEventListener("mousemove",this.eventList.updateMouse),this.eventList=null}deleteOutlinePass(e){this.outlinePassMap.delete(e)}getOutlineArray(e){let t=[];return this.outlinePassMap.get(e)&&(t=this.outlinePassMap.get(e).selectedObjects),t}init(){this.emitter=d.default();const e=this.element,t=(this.options,this.renderer=new m.WebGLRenderer({alpha:!0,antialias:!0}));return 0===e.clientWidth||0===e.clientHeight?(console.error("element should had width and height before init."),this):(this.innerWidth=e.clientWidth,this.innerHeight=e.clientHeight,this.controllerIdList=new Map,this.offset=$(e).offset(),t.setSize(e.clientWidth,e.clientHeight),e.appendChild(t.domElement),this.raycaster=new m.Raycaster,this.mouse=new m.Vector2,this.inspector=new o.default(this),this.eventList={resize:this.resize.bind(this),updateMouse:this.updateMouse.bind(this)},window.addEventListener("resize",this.eventList.resize),this.initUpdateRaycasterObjects(),this)}initBloom(){this.initComposer();const e=this.composer,t=new m.RenderPass(this.scene,this.camera);e.addPass(t);const r=new m.UnrealBloomPass(new m.Vector2(this.innerWidth,this.innerHeight),1.5,.4,.85);r.threshold=0,r.strength=1.5,r.radius=0,r.renderToScreen=!0,this.bloomPass=r,e.addPass(r);const i=new m.ShaderPass(m.FXAAShader),s=this.renderer.getPixelRatio();i.material.uniforms.resolution.value.x=1/(this.innerWidth*s),i.material.uniforms.resolution.value.y=1/(this.innerHeight*s),e.addPass(i)}initOrbit(){return(this.options||{}).orbit&&(this.orbit=new m.OrbitControls(this.camera,this.renderer.domElement)).update(),this}initOutline(){this.initComposer();const e=this.composer,t=new m.RenderPass(this.scene,this.camera);e.addPass(t),this.outlinePassMap=new Map,this.setOutlinePass("space");const r=new m.ShaderPass(m.FXAAShader),i=this.renderer.getPixelRatio();return r.material.uniforms.resolution.value.x=1/(this.innerWidth*i),r.material.uniforms.resolution.value.y=1/(this.innerHeight*i),e.addPass(r),this}load(e){const t=this,r=this.progressBar=new n.default(this.element);return new Promise(((i,s)=>{const a=new m.GLTFLoader,o=new m.FileLoader(m.DefaultLoadingManager);o.setResponseType("arraybuffer"),r.start(),o.load(e,(function(o){const n=m.LoaderUtils.extractUrlBase(e),l=performance.now();r.parse(),a.parse(o,n,(e=>{console.log("parse spent:",performance.now()-l),console.log(e),r.dispose(),t.afterLoaded(e),i()}),(e=>{s(e)}))}),(function(e){r.progress(e.loaded/e.total*100)}),(function(e){s(e)}))}))}raycasterAction(){if(0===this.raycasterEventMap.size)return this;const e=this.raycaster,t=this.mouse,r=this.raycasterEventMap;let i;if(e.setFromCamera(t,this.camera),i=e.intersectObjects(this.raycasterObjects,this.raycasterRecursive),r.has(t.eventType)){const e=r.get(t.eventType);e&&e(i)}return this}resize(){const e=this.camera,t=this.element;return this.offset=$(t).offset(),0===t.clientWidth||0===t.clientHeight?(console.error("resize error:element width and height is error.",t.clientWidth,t.clientHeight),this):(console.log("resize:",this.offset),"PerspectiveCamera"===e.type&&(e.aspect=t.clientWidth/t.clientHeight,e.updateProjectionMatrix()),this.innerHeight=t.clientHeight,this.innerWidth=t.clientWidth,this.renderer.setSize(t.clientWidth,t.clientHeight),this)}setControllerId(e,t){const r=this.controllerIdList;if(r.has(e))return console.error("error: same id.",r.get(e),t);r.set(e,t)}setOutline(e,t){if(!this.outlinePassMap)return console.warn("initOutlinePass() should be invoked first.");const r=this.outlinePassMap.get(t||"space");r&&(r.selectedObjects=e)}setOutlinePass(e,t){const r=new m.OutlinePass(new m.Vector2(this.innerWidth,this.innerHeight),this.scene,this.camera);this.composer.addPass(r);const i=t||{};r.edgeStrength=c.isNumber(i.edgeStrength)?i.edgeStrength:5,r.edgeGlow=c.isNumber(i.edgeGlow)?i.edgeGlow:1,r.pulsePeriod=c.isNumber(i.pulsePeriod)?i.pulsePeriod:2,r.visibleEdgeColor.set(i.visibleEdgeColor||"#35f2d1"),r.hiddenEdgeColor.set(i.hiddenEdgeColor||"#00ffff"),this.outlinePassMap.set(e,r)}setPerspectiveCamera(e,t){const r=m.Math.degToRad;return e.fov=t.fov||50,e.position.set(c.isNumber(t.x)?t.x:1,c.isNumber(t.y)?t.y:1,c.isNumber(t.z)?t.z:1),e.rotation.set(r(t.rx||0),r(t.ry||0),r(t.rz||0)),e.updateProjectionMatrix(),this.initOrbit(),this}setRaycasterEventMap(e){let t=this.raycasterEventMap;return t||(t=this.raycasterEventMap=new Map),t.set("click",e.click),t.set("dblclick",e.dblclick),t.set("mousemove",e.mousemove),this}updateMouse(e){const t=this.mouse;switch(e.type){case"click":t.eventType="click",t.clickEvent=e;break;case"dblclick":t.eventType="dblclick",t.dblclickEvent=e;break;case"mousemove":t.eventType="mousemove",t.mousemoveEvent=e;break;default:return console.error("updateMouse eventType error:",e),this}return t.x=(e.clientX-this.offset.left)/this.innerWidth*2-1,t.y=-(e.clientY-this.offset.top)/this.innerHeight*2+1,this.raycasterAction(),this}showHeatmap(e){this.heatmap=new a.default(this,e)}on(e,t){this.emitter.on(e,t)}off(e,t){this.emitter.off(e,t)}emit(e,t){this.emitter.emit(e,t)}getBox(){this.box3=(new m.Box3).setFromObject(this.scene.children[0])}initComposer(){this.composer||(this.composer=new m.EffectComposer(this.renderer))}initUpdateRaycasterObjects(){this.updateRaycasterObjects=c.throttle(function(){return this.raycasterObjects=[],this.scene.traverse((e=>{e.$controller&&e.$controller.raycasterFlag&&this.raycasterObjects.push(e.$controller.getRaycasterObject())})),this.raycasterObjects}.bind(this),500)}}},8269:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={animate:"animate"}},1855:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(4075),s=window.THREE;t.default=class{constructor(e,t){this.space=e,this.max=0,this.points=[],this.init(),this.createPlane(t)}init(){const e=this.container=document.createElement("div");e.style.width="1024px",e.style.height="1024px",e.style.display="none",e.className="heatmap-container",document.body.appendChild(e),this.heatmapInstance=i.create({container:e}),this.heatmapInstance.setData({data:[],max:0})}createPlane(e){if(!e)return console.warn("mainObj is null");const t=this.heatmapInstance._renderer.canvas,r=new s.Box3;r.setFromObject(e);const i=Math.abs(r.max.x-r.min.x),a=Math.abs(r.max.z-r.min.z),o=this.len=2*Math.max(i,a),n=new s.CanvasTexture(t),l=new s.MeshBasicMaterial({transparent:!0,depthTest:!1,depthWrite:!1,map:n}),h=new s.PlaneBufferGeometry(o,o),c=this.plane=new s.Mesh(h,l);c.rotation.x=.5*-Math.PI,this.space.scene.add(c)}setDatas(e){this.points=[],e.forEach((e=>{e.value>this.max&&(console.warn("max value increase to ",e.value),this.max=e.value),this.points.push({value:e.value,x:1024*(e.x/this.len+.5),y:1024*(e.y/this.len+.5)})})),this.points.push({x:0,y:0,value:0}),this.heatmapInstance.setData({data:this.points,max:this.max}),this.plane.material.map.needsUpdate=!0}setMax(e){this.max=e||0}visible(e){this.plane.visible=e}}},6665:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(2212),s=r(8269),a=r(9655);t.default=class{constructor(e){return this.space=e,this}showAxesHelp(e){this.space.scene.add(new i.AxesHelper(e||20))}showStats(){this.stats=new a.default,this.space.element.appendChild(this.stats.dom),this.statsAnimate=function(){this.stats.update()},this.space.on(s.default.animate,this.statsAnimate)}}},5459:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getColorByValue=t.hasGeometry=t.copyCoordinate=t.resetCoordinate=void 0,t.resetCoordinate=function(e){e.position.set(0,0,0),e.scale.set(1,1,1),e.rotation.set(0,0,0)},t.copyCoordinate=function(e,t){t.position.copy(e.position.clone()),t.scale.copy(e.scale.clone()),t.rotation.copy(e.rotation.clone())},t.hasGeometry=function(e){return!!e.geometry};t.getColorByValue=function(e){let t;return t=e<50?"rgb(139,195,74)":e<80?"rgb(255,235,59)":e<90?"rgb(255,152,0)":"rgb(244,67,54)",t}},3066:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(3413),s=r(9825),a=r(2263),o=r(5877),n=r(5294);t.default=class{constructor(e){0!==e.clientWidth&&0!==e.clientHeight||console.error("element should had width and height before init."),this.element=e,this.progressValue=0,this.id="progress-bar"+o(),this.init()}init(){this.svgSelection=s.select(this.element).append("div").attr("id",this.id).style("left","15%").style("top","40%").style("position","absolute").style("width","70%").append("svg").attr("viewBox","0 0 100 20");const e=this.svgSelection;e.append("rect").attr("width","100").attr("height","20").attr("fill",n.colorRGBA.mainAlpha),this.progressSelection=e.append("rect").attr("width","0").attr("height","20").attr("fill",n.colorRGBA.submain),e.append("line").attr("x1","0").attr("x2","100").attr("y1","0").attr("y2","0").attr("stroke",n.colorRGBA.border),e.append("line").attr("x1","0").attr("x2","100").attr("y1","20").attr("y2","20").attr("stroke",n.colorRGBA.border),e.append("line").attr("x1","0").attr("x2","0").attr("y1","0").attr("y2","20").attr("stroke",n.colorRGBA.border),e.append("line").attr("x1","100").attr("x2","100").attr("y1","0").attr("y2","20").attr("stroke",n.colorRGBA.border),this.textSelection=e.append("text").attr("font-size","80%").attr("x","5").attr("y","14").attr("fill",n.colorRGBA.font).text("LOADING 0%")}progress(e){const t=i.interpolate(this.progressValue,e);this.progressValue=e,a.transition().tween("progress",(()=>e=>{const r=t(e).toFixed(0);this.textSelection.text(`LOADING ${r}%`),this.progressSelection.attr("width",r)}))}setText(e){this.textSelection.text(e)}start(){this.textSelection.text("LOADING 0%")}parse(){this.progressSelection.transition().attrTween("width",(()=>i.interpolateNumber(0,100))),this.setText(" PARSEING")}error(){this.setText("LOAD ERROR")}dispose(){setTimeout((()=>{s.selectAll(`#${this.id}`).remove()}),1e3)}}},5294:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.colorRGBA=void 0,t.colorRGBA={main:"rgb(8,34,88)",mainAlpha:"rgba(8,34,88,0.6)",submain:"rgb(16,235,244)",submainAlpha:"rgba(16,235,244,0.8)",font:"rgb(243,188,15)",border:"rgb(243,188,15)",safe:"rgb(139,195,74)",much:"rgb(255,235,59)",over:"rgb(255,152,0)",dangerous:"rgb(244,67,54)"}},723:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),r(3734),r(4039);const i=r(9755);r(8981);const s=r(2212),a=r(7518),o=r(9271);a.init({dsn:"https://4ab883bdc9724536b9089ab2c3b4a2e4@o211285.ingest.sentry.io/1442492",integrations:[new o.Integrations.BrowserTracing],tracesSampleRate:1}),window.$=window.jquery=i,window.THREE=s},9655:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>i});var i=function(){var e=0,t=document.createElement("div");function r(e){return t.appendChild(e.dom),e}function s(r){for(var i=0;i<t.children.length;i++)t.children[i].style.display=i===r?"block":"none";e=r}t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",(function(r){r.preventDefault(),s(++e%t.children.length)}),!1);var a=(performance||Date).now(),o=a,n=0,l=r(new i.Panel("FPS","#0ff","#002")),h=r(new i.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var c=r(new i.Panel("MB","#f08","#201"));return s(0),{REVISION:16,dom:t,addPanel:r,showPanel:s,begin:function(){a=(performance||Date).now()},end:function(){n++;var e=(performance||Date).now();if(h.update(e-a,200),e>=o+1e3&&(l.update(1e3*n/(e-o),100),o=e,n=0,c)){var t=performance.memory;c.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){a=this.end()},domElement:t,setMode:s}};i.Panel=function(e,t,r){var i=1/0,s=0,a=Math.round,o=a(window.devicePixelRatio||1),n=80*o,l=48*o,h=3*o,c=2*o,d=3*o,u=15*o,m=74*o,p=30*o,g=document.createElement("canvas");g.width=n,g.height=l,g.style.cssText="width:80px;height:48px";var f=g.getContext("2d");return f.font="bold "+9*o+"px Helvetica,Arial,sans-serif",f.textBaseline="top",f.fillStyle=r,f.fillRect(0,0,n,l),f.fillStyle=t,f.fillText(e,h,c),f.fillRect(d,u,m,p),f.fillStyle=r,f.globalAlpha=.9,f.fillRect(d,u,m,p),{dom:g,update:function(l,v){i=Math.min(i,l),s=Math.max(s,l),f.fillStyle=r,f.globalAlpha=1,f.fillRect(0,0,n,u),f.fillStyle=t,f.fillText(a(l)+" "+e+" ("+a(i)+"-"+a(s)+")",h,c),f.drawImage(g,d+o,u,m-o,p,d,u,m-o,p),f.fillRect(d+m-o,u,o,p),f.fillStyle=r,f.globalAlpha=.9,f.fillRect(d+m-o,u,o,a((1-l/v)*p))}}}},2264:()=>{THREE.UnrealBloomPass=function(e,t,r,i){THREE.Pass.call(this),this.strength=void 0!==t?t:1,this.radius=r,this.threshold=i,this.resolution=void 0!==e?new THREE.Vector2(e.x,e.y):new THREE.Vector2(256,256),this.clearColor=new THREE.Color(0,0,0);var s={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var a=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2);this.renderTargetBright=new THREE.WebGLRenderTarget(a,o,s),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var n=0;n<this.nMips;n++){var l=new THREE.WebGLRenderTarget(a,o,s);l.texture.name="UnrealBloomPass.h"+n,l.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(l);var h=new THREE.WebGLRenderTarget(a,o,s);h.texture.name="UnrealBloomPass.v"+n,h.texture.generateMipmaps=!1,this.renderTargetsVertical.push(h),a=Math.round(a/2),o=Math.round(o/2)}void 0===THREE.LuminosityHighPassShader&&console.error("THREE.UnrealBloomPass relies on THREE.LuminosityHighPassShader");var c=THREE.LuminosityHighPassShader;this.highPassUniforms=THREE.UniformsUtils.clone(c.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new THREE.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,defines:{}}),this.separableBlurMaterials=[];var d=[3,5,7,9,11];for(a=Math.round(this.resolution.x/2),o=Math.round(this.resolution.y/2),n=0;n<this.nMips;n++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(d[n])),this.separableBlurMaterials[n].uniforms.texSize.value=new THREE.Vector2(a,o),a=Math.round(a/2),o=Math.round(o/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=t,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0,this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1),new THREE.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");var u=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(u.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.basic=new THREE.MeshBasicMaterial,this.fsQuad=new THREE.Pass.FullScreenQuad(null)},THREE.UnrealBloomPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.UnrealBloomPass,dispose:function(){for(var e=0;e<this.renderTargetsHorizontal.length;e++)this.renderTargetsHorizontal[e].dispose();for(e=0;e<this.renderTargetsVertical.length;e++)this.renderTargetsVertical[e].dispose();this.renderTargetBright.dispose()},setSize:function(e,t){var r=Math.round(e/2),i=Math.round(t/2);this.renderTargetBright.setSize(r,i);for(var s=0;s<this.nMips;s++)this.renderTargetsHorizontal[s].setSize(r,i),this.renderTargetsVertical[s].setSize(r,i),this.separableBlurMaterials[s].uniforms.texSize.value=new THREE.Vector2(r,i),r=Math.round(r/2),i=Math.round(i/2)},render:function(e,t,r,i,s){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var a=e.autoClear;e.autoClear=!1,e.setClearColor(this.clearColor,0),s&&e.context.disable(e.context.STENCIL_TEST),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=r.texture,e.setRenderTarget(null),e.clear(),this.fsQuad.render(e)),this.highPassUniforms.tDiffuse.value=r.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,e.setRenderTarget(this.renderTargetBright),e.clear(),this.fsQuad.render(e);for(var o=this.renderTargetBright,n=0;n<this.nMips;n++)this.fsQuad.material=this.separableBlurMaterials[n],this.separableBlurMaterials[n].uniforms.colorTexture.value=o.texture,this.separableBlurMaterials[n].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionX,e.setRenderTarget(this.renderTargetsHorizontal[n]),e.clear(),this.fsQuad.render(e),this.separableBlurMaterials[n].uniforms.colorTexture.value=this.renderTargetsHorizontal[n].texture,this.separableBlurMaterials[n].uniforms.direction.value=THREE.UnrealBloomPass.BlurDirectionY,e.setRenderTarget(this.renderTargetsVertical[n]),e.clear(),this.fsQuad.render(e),o=this.renderTargetsVertical[n];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,e.setRenderTarget(this.renderTargetsHorizontal[0]),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,s&&e.context.enable(e.context.STENCIL_TEST),this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(r),this.fsQuad.render(e)),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=a},getSeperableBlurMaterial:function(e){return new THREE.ShaderMaterial({defines:{KERNEL_RADIUS:e,SIGMA:e},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tfloat alphaSum = 0.0;\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec4 sample1 = texture2D( colorTexture, vUv + uvOffset);\t\t\t\t\t\tvec4 sample2 = texture2D( colorTexture, vUv - uvOffset);\t\t\t\t\t\tdiffuseSum += (sample1.rgb + sample2.rgb) * w;\t\t\t\t\t\talphaSum += (sample1.a + sample2.a) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, alphaSum/weightSum);\n\t\t\t\t}"})},getCompositeMaterial:function(e){return new THREE.ShaderMaterial({defines:{NUM_MIPS:e},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),THREE.UnrealBloomPass.BlurDirectionX=new THREE.Vector2(1,0),THREE.UnrealBloomPass.BlurDirectionY=new THREE.Vector2(0,1)},7835:()=>{THREE.OutlinePass=function(e,t,r,i){this.renderScene=t,this.renderCamera=r,this.selectedObjects=void 0!==i?i:[],this.visibleEdgeColor=new THREE.Color(1,1,1),this.hiddenEdgeColor=new THREE.Color(.1,.04,.02),this.edgeGlow=0,this.usePatternTexture=!1,this.edgeThickness=1,this.edgeStrength=3,this.downSampleRatio=2,this.pulsePeriod=0,THREE.Pass.call(this),this.resolution=void 0!==e?new THREE.Vector2(e.x,e.y):new THREE.Vector2(256,256);var s={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat},a=Math.round(this.resolution.x/this.downSampleRatio),o=Math.round(this.resolution.y/this.downSampleRatio);this.maskBufferMaterial=new THREE.MeshBasicMaterial({color:16777215}),this.maskBufferMaterial.side=THREE.DoubleSide,this.renderTargetMaskBuffer=new THREE.WebGLRenderTarget(this.resolution.x,this.resolution.y,s),this.renderTargetMaskBuffer.texture.name="OutlinePass.mask",this.renderTargetMaskBuffer.texture.generateMipmaps=!1,this.depthMaterial=new THREE.MeshDepthMaterial,this.depthMaterial.side=THREE.DoubleSide,this.depthMaterial.depthPacking=THREE.RGBADepthPacking,this.depthMaterial.blending=THREE.NoBlending,this.prepareMaskMaterial=this.getPrepareMaskMaterial(),this.prepareMaskMaterial.side=THREE.DoubleSide,this.prepareMaskMaterial.fragmentShader=function(e,t){var r=t.isPerspectiveCamera?"perspective":"orthographic";return e.replace(/DEPTH_TO_VIEW_Z/g,r+"DepthToViewZ")}(this.prepareMaskMaterial.fragmentShader,this.renderCamera),this.renderTargetDepthBuffer=new THREE.WebGLRenderTarget(this.resolution.x,this.resolution.y,s),this.renderTargetDepthBuffer.texture.name="OutlinePass.depth",this.renderTargetDepthBuffer.texture.generateMipmaps=!1,this.renderTargetMaskDownSampleBuffer=new THREE.WebGLRenderTarget(a,o,s),this.renderTargetMaskDownSampleBuffer.texture.name="OutlinePass.depthDownSample",this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps=!1,this.renderTargetBlurBuffer1=new THREE.WebGLRenderTarget(a,o,s),this.renderTargetBlurBuffer1.texture.name="OutlinePass.blur1",this.renderTargetBlurBuffer1.texture.generateMipmaps=!1,this.renderTargetBlurBuffer2=new THREE.WebGLRenderTarget(Math.round(a/2),Math.round(o/2),s),this.renderTargetBlurBuffer2.texture.name="OutlinePass.blur2",this.renderTargetBlurBuffer2.texture.generateMipmaps=!1,this.edgeDetectionMaterial=this.getEdgeDetectionMaterial(),this.renderTargetEdgeBuffer1=new THREE.WebGLRenderTarget(a,o,s),this.renderTargetEdgeBuffer1.texture.name="OutlinePass.edge1",this.renderTargetEdgeBuffer1.texture.generateMipmaps=!1,this.renderTargetEdgeBuffer2=new THREE.WebGLRenderTarget(Math.round(a/2),Math.round(o/2),s),this.renderTargetEdgeBuffer2.texture.name="OutlinePass.edge2",this.renderTargetEdgeBuffer2.texture.generateMipmaps=!1,this.separableBlurMaterial1=this.getSeperableBlurMaterial(4),this.separableBlurMaterial1.uniforms.texSize.value=new THREE.Vector2(a,o),this.separableBlurMaterial1.uniforms.kernelRadius.value=1,this.separableBlurMaterial2=this.getSeperableBlurMaterial(4),this.separableBlurMaterial2.uniforms.texSize.value=new THREE.Vector2(Math.round(a/2),Math.round(o/2)),this.separableBlurMaterial2.uniforms.kernelRadius.value=4,this.overlayMaterial=this.getOverlayMaterial(),void 0===THREE.CopyShader&&console.error("THREE.OutlinePass relies on THREE.CopyShader");var n=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(n.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,blending:THREE.NoBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.fsQuad=new THREE.Pass.FullScreenQuad(null),this.pulseWeight=1,this.textureMatrix=new THREE.Matrix4},THREE.OutlinePass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.OutlinePass,dispose:function(){this.renderTargetMaskBuffer.dispose(),this.renderTargetDepthBuffer.dispose(),this.renderTargetMaskDownSampleBuffer.dispose(),this.renderTargetBlurBuffer1.dispose(),this.renderTargetBlurBuffer2.dispose(),this.renderTargetEdgeBuffer1.dispose(),this.renderTargetEdgeBuffer2.dispose()},setSize:function(e,t){this.renderTargetMaskBuffer.setSize(e,t);var r=Math.round(e/this.downSampleRatio),i=Math.round(t/this.downSampleRatio);this.renderTargetMaskDownSampleBuffer.setSize(r,i),this.renderTargetBlurBuffer1.setSize(r,i),this.renderTargetEdgeBuffer1.setSize(r,i),this.separableBlurMaterial1.uniforms.texSize.value=new THREE.Vector2(r,i),r=Math.round(r/2),i=Math.round(i/2),this.renderTargetBlurBuffer2.setSize(r,i),this.renderTargetEdgeBuffer2.setSize(r,i),this.separableBlurMaterial2.uniforms.texSize.value=new THREE.Vector2(r,i)},changeVisibilityOfSelectedObjects:function(e){function t(t){t.isMesh&&(e?(t.visible=t.userData.oldVisible,delete t.userData.oldVisible):(t.userData.oldVisible=t.visible,t.visible=e))}for(var r=0;r<this.selectedObjects.length;r++)this.selectedObjects[r].traverse(t)},changeVisibilityOfNonSelectedObjects:function(e){var t=[];function r(e){e.isMesh&&t.push(e)}for(var i=0;i<this.selectedObjects.length;i++)this.selectedObjects[i].traverse(r);this.renderScene.traverse((function(r){if(r.isMesh||r.isLine||r.isSprite){for(var i=!1,s=0;s<t.length;s++)if(t[s].id===r.id){i=!0;break}if(!i){var a=r.visible;e&&!r.bVisible||(r.visible=e),r.bVisible=a}}}))},updateTextureMatrix:function(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiply(this.renderCamera.projectionMatrix),this.textureMatrix.multiply(this.renderCamera.matrixWorldInverse)},render:function(e,t,r,i,s){if(this.selectedObjects.length>0){this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha();var a=e.autoClear;e.autoClear=!1,s&&e.context.disable(e.context.STENCIL_TEST),e.setClearColor(16777215,1),this.changeVisibilityOfSelectedObjects(!1);var o=this.renderScene.background;if(this.renderScene.background=null,this.renderScene.overrideMaterial=this.depthMaterial,e.setRenderTarget(this.renderTargetDepthBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.changeVisibilityOfSelectedObjects(!0),this.updateTextureMatrix(),this.changeVisibilityOfNonSelectedObjects(!1),this.renderScene.overrideMaterial=this.prepareMaskMaterial,this.prepareMaskMaterial.uniforms.cameraNearFar.value=new THREE.Vector2(this.renderCamera.near,this.renderCamera.far),this.prepareMaskMaterial.uniforms.depthTexture.value=this.renderTargetDepthBuffer.texture,this.prepareMaskMaterial.uniforms.textureMatrix.value=this.textureMatrix,e.setRenderTarget(this.renderTargetMaskBuffer),e.clear(),e.render(this.renderScene,this.renderCamera),this.renderScene.overrideMaterial=null,this.changeVisibilityOfNonSelectedObjects(!0),this.renderScene.background=o,this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetMaskBuffer.texture,e.setRenderTarget(this.renderTargetMaskDownSampleBuffer),e.clear(),this.fsQuad.render(e),this.pulsePeriod>0){var n=.625+.75*Math.cos(.01*performance.now()/this.pulsePeriod)/2;this.pulseWeight=n}this.fsQuad.material=this.edgeDetectionMaterial,this.edgeDetectionMaterial.uniforms.maskTexture.value=this.renderTargetMaskDownSampleBuffer.texture,this.edgeDetectionMaterial.uniforms.texSize.value=new THREE.Vector2(this.renderTargetMaskDownSampleBuffer.width,this.renderTargetMaskDownSampleBuffer.height),this.edgeDetectionMaterial.uniforms.visibleEdgeColor.value=this.visibleEdgeColor,this.edgeDetectionMaterial.uniforms.hiddenEdgeColor.value=this.hiddenEdgeColor,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial1,this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=THREE.OutlinePass.BlurDirectionX,this.separableBlurMaterial1.uniforms.kernelRadius.value=this.edgeThickness,e.setRenderTarget(this.renderTargetBlurBuffer1),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial1.uniforms.colorTexture.value=this.renderTargetBlurBuffer1.texture,this.separableBlurMaterial1.uniforms.direction.value=THREE.OutlinePass.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer1),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.separableBlurMaterial2,this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetEdgeBuffer1.texture,this.separableBlurMaterial2.uniforms.direction.value=THREE.OutlinePass.BlurDirectionX,e.setRenderTarget(this.renderTargetBlurBuffer2),e.clear(),this.fsQuad.render(e),this.separableBlurMaterial2.uniforms.colorTexture.value=this.renderTargetBlurBuffer2.texture,this.separableBlurMaterial2.uniforms.direction.value=THREE.OutlinePass.BlurDirectionY,e.setRenderTarget(this.renderTargetEdgeBuffer2),e.clear(),this.fsQuad.render(e),this.fsQuad.material=this.overlayMaterial,this.overlayMaterial.uniforms.maskTexture.value=this.renderTargetMaskBuffer.texture,this.overlayMaterial.uniforms.edgeTexture1.value=this.renderTargetEdgeBuffer1.texture,this.overlayMaterial.uniforms.edgeTexture2.value=this.renderTargetEdgeBuffer2.texture,this.overlayMaterial.uniforms.patternTexture.value=this.patternTexture,this.overlayMaterial.uniforms.edgeStrength.value=this.edgeStrength,this.overlayMaterial.uniforms.edgeGlow.value=this.edgeGlow,this.overlayMaterial.uniforms.usePatternTexture.value=this.usePatternTexture,this.overlayMaterial.uniforms.visibleEdgeColor.value=this.visibleEdgeColor,this.overlayMaterial.uniforms.hiddenEdgeColor.value=this.hiddenEdgeColor,this.overlayMaterial.uniforms.pulseWeight.value=this.pulseWeight,s&&e.context.enable(e.context.STENCIL_TEST),e.setRenderTarget(r),this.fsQuad.render(e),e.setClearColor(this.oldClearColor,this.oldClearAlpha),e.autoClear=a}this.renderToScreen&&(this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=r.texture,e.setRenderTarget(null),this.fsQuad.render(e))},getPrepareMaskMaterial:function(){return new THREE.ShaderMaterial({uniforms:{depthTexture:{value:null},cameraNearFar:{value:new THREE.Vector2(.5,.5)},textureMatrix:{value:new THREE.Matrix4}},vertexShader:["varying vec4 projTexCoord;","varying vec4 vPosition;","uniform mat4 textureMatrix;","void main() {","\tvPosition = modelViewMatrix * vec4( position, 1.0 );","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tprojTexCoord = textureMatrix * worldPosition;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["#include <packing>","varying vec4 vPosition;","varying vec4 projTexCoord;","uniform sampler2D depthTexture;","uniform vec2 cameraNearFar;","void main() {","\tfloat depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));","\tfloat viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );","\tfloat depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;","\tgl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);","}"].join("\n")})},getEdgeDetectionMaterial:function(){return new THREE.ShaderMaterial({uniforms:{maskTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},visibleEdgeColor:{value:new THREE.Vector3(1,1,1)},hiddenEdgeColor:{value:new THREE.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D maskTexture;\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec3 visibleEdgeColor;\t\t\t\tuniform vec3 hiddenEdgeColor;\t\t\t\t\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tvec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\t\t\t\t\tvec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\t\t\t\t\tvec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\t\t\t\t\tvec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\t\t\t\t\tvec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\t\t\t\t\tfloat diff1 = (c1.r - c2.r)*0.5;\t\t\t\t\tfloat diff2 = (c3.r - c4.r)*0.5;\t\t\t\t\tfloat d = length( vec2(diff1, diff2) );\t\t\t\t\tfloat a1 = min(c1.g, c2.g);\t\t\t\t\tfloat a2 = min(c3.g, c4.g);\t\t\t\t\tfloat visibilityFactor = min(a1, a2);\t\t\t\t\tvec3 visible = vec3(1.0, 0.0, 0.0);\t\t\t\t\tvec3 hidden = vec3(0.0, 1.0, 0.0);\t\t\t\t\tvec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\t\t\t\t\tgl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\t\t\t\t}"})},getSeperableBlurMaterial:function(e){return new THREE.ShaderMaterial({defines:{MAX_RADIUS:e},uniforms:{colorTexture:{value:null},texSize:{value:new THREE.Vector2(.5,.5)},direction:{value:new THREE.Vector2(.5,.5)},kernelRadius:{value:1}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\t\t\t\tuniform sampler2D colorTexture;\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\tuniform float kernelRadius;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, kernelRadius);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tvec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\t\t\t\t\tvec2 uvOffset = delta;\t\t\t\t\tfor( int i = 1; i <= MAX_RADIUS; i ++ ) {\t\t\t\t\t\tfloat w = gaussianPdf(uvOffset.x, kernelRadius);\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += ((sample1 + sample2) * w);\t\t\t\t\t\tweightSum += (2.0 * w);\t\t\t\t\t\tuvOffset += delta;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\t\t\t\t}"})},getOverlayMaterial:function(){return new THREE.ShaderMaterial({uniforms:{maskTexture:{value:null},edgeTexture1:{value:null},edgeTexture2:{value:null},patternTexture:{value:null},edgeStrength:{value:1},edgeGlow:{value:1},usePatternTexture:{value:0},visibleEdgeColor:{value:new THREE.Vector3(1,1,1)},hiddenEdgeColor:{value:new THREE.Vector3(1,1,1)},pulseWeight:{value:1}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D maskTexture;\t\t\t\tuniform sampler2D edgeTexture1;\t\t\t\tuniform sampler2D edgeTexture2;\t\t\t\tuniform sampler2D patternTexture;\t\t\t\tuniform float edgeStrength;\t\t\t\tuniform float edgeGlow;\t\t\t\tuniform bool usePatternTexture;\t\t\t\tuniform vec3 visibleEdgeColor;\t\t\t\tuniform vec3 hiddenEdgeColor;\t\t\t        uniform float pulseWeight;\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tvec4 edgeValue1 = texture2D(edgeTexture1, vUv);\t\t\t\t\tvec4 edgeValue2 = texture2D(edgeTexture2, vUv);\t\t\t\t\tvec4 maskColor = texture2D(maskTexture, vUv);\t\t\t\t\tvec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\t\t\t\t\tfloat visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\t\t\t\t\tvec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\t\t\t\t\tvec4 colorWeights = edgeStrength * maskColor.r * edgeValue;\t\t\t\t\tfloat alpha = (colorWeights.r + colorWeights.g) * pulseWeight;\t\t\t\t\tif (alpha==0.0)\t\t\t\t\t\tdiscard;\t\t\t\t\tfloat norm = 1.0 / alpha;\t\t\t\t\tvec3 visiblePart = visibleEdgeColor * norm * colorWeights.r;\t\t\t\t\tvec3 hiddenPart = hiddenEdgeColor * norm * colorWeights.g;\t\t\t\t\tvec4 finalColor = vec4(visiblePart+hiddenPart, alpha);\t\t\t\t\tif(usePatternTexture)\t\t\t\t\t\tfinalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\t\t\t\t\tgl_FragColor = finalColor;\t\t\t\t}",blending:THREE.NormalBlending,depthTest:!1,depthWrite:!1,transparent:!0})}}),THREE.OutlinePass.BlurDirectionX=new THREE.Vector2(1,0),THREE.OutlinePass.BlurDirectionY=new THREE.Vector2(0,1)},9700:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 width=%278%27 height=%278%27 viewBox=%270 0 8 8%27%3e%3cpath d=%27M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z%27/%3e%3c/svg%3e"},4104:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 fill=%27%23fff%27 width=%278%27 height=%278%27 viewBox=%270 0 8 8%27%3e%3cpath d=%27M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z%27/%3e%3c/svg%3e"},1024:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2712%27 height=%2712%27 fill=%27none%27 stroke=%27%23dc3545%27 viewBox=%270 0 12 12%27%3e%3ccircle cx=%276%27 cy=%276%27 r=%274.5%27/%3e%3cpath stroke-linejoin=%27round%27 d=%27M5.8 3.6h.4L6 6.5z%27/%3e%3ccircle cx=%276%27 cy=%278.2%27 r=%27.6%27 fill=%27%23dc3545%27 stroke=%27none%27/%3e%3c/svg%3e"},7263:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2712%27 height=%2712%27 viewBox=%27-4 -4 8 8%27%3e%3ccircle r=%273%27 fill=%27%23fff%27/%3e%3c/svg%3e"},1380:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2730%27 height=%2730%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%280, 0, 0, 0.5%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},9242:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2730%27 height=%2730%27 viewBox=%270 0 30 30%27%3e%3cpath stroke=%27rgba%28255, 255, 255, 0.5%29%27 stroke-linecap=%27round%27 stroke-miterlimit=%2710%27 stroke-width=%272%27 d=%27M4 7h22M4 15h22M4 23h22%27/%3e%3c/svg%3e"},4231:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%274%27 height=%274%27 viewBox=%270 0 4 4%27%3e%3cpath stroke=%27%23fff%27 d=%27M0 2h4%27/%3e%3c/svg%3e"},4576:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%274%27 height=%275%27 viewBox=%270 0 4 5%27%3e%3cpath fill=%27%23343a40%27 d=%27M2 0L0 2h4zm0 5L0 3h4z%27/%3e%3c/svg%3e"},7211:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%278%27 height=%278%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%2328a745%27 d=%27M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z%27/%3e%3c/svg%3e"},9653:e=>{"use strict";e.exports="data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%278%27 height=%278%27 viewBox=%270 0 8 8%27%3e%3cpath fill=%27%23fff%27 d=%27M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z%27/%3e%3c/svg%3e"}}]);